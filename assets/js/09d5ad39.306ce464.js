"use strict";(self.webpackChunkdynamic_installer_doc=self.webpackChunkdynamic_installer_doc||[]).push([[1864],{3973:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"examples","title":"\ud83d\udcdd Examples","description":"Practical script examples for Dynamic Installer.","source":"@site/docs/examples.md","sourceDirName":".","slug":"/examples","permalink":"/DynamicInstaller_Doc/docs/examples","draft":false,"unlisted":false,"editUrl":"https://github.com/BlassGO/DynamicInstaller_Doc/edit/main/docs/examples.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"id":"examples","title":"\ud83d\udcdd Examples","description":"Practical script examples for Dynamic Installer."},"sidebar":"tutorialSidebar","previous":{"title":"\ud83c\udfa5 FFmpeg","permalink":"/DynamicInstaller_Doc/docs/get-plugins/ffmpeg"},"next":{"title":"\ud83d\udd12 Obfuscate Your Code","permalink":"/DynamicInstaller_Doc/docs/protect-code"}}');var t=e(4848),s=e(8453);const a={sidebar_position:10,id:"examples",title:"\ud83d\udcdd Examples",description:"Practical script examples for Dynamic Installer."},l="\ud83d\udcdd Examples",o={},d=[{value:"ROM Installation (RAW + XZ)",id:"rom-installation-raw--xz",level:2},{value:"ROM Installation (Sparse)",id:"rom-installation-sparse",level:2},{value:"ROM Installation (From Internal Memory)",id:"rom-installation-from-internal-memory",level:2},{value:"Only Extraction",id:"only-extraction",level:2},{value:"Kernel Installation (Multiple Devices)",id:"kernel-installation-multiple-devices",level:2},{value:"Magisk Module",id:"magisk-module",level:2},{value:"Magisk Module (APKTOOL)",id:"magisk-module-apktool",level:2},{value:"Magisk and KernelSU Module",id:"magisk-and-kernelsu-module",level:2}];function p(n){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"-examples",children:"\ud83d\udcdd Examples"})}),"\n",(0,t.jsxs)(r.p,{children:["Practical examples of scripts using Dynamic Installer for various use cases. Each example includes a brief description and the corresponding ",(0,t.jsx)(r.a,{href:"/DynamicInstaller_Doc/docs/introduction#how-does-it-work",children:"updater-script"})," or ",(0,t.jsx)(r.a,{href:"/DynamicInstaller_Doc/docs/introduction#how-does-it-work",children:"customize.sh"})," code."]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"rom-installation-raw--xz",children:"ROM Installation (RAW + XZ)"}),"\n",(0,t.jsx)(r.p,{children:"Installs a ROM using RAW images compressed in XZ format. Suitable for both 32-bit and 64-bit devices."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'#-----------Dynamic Installer Configs-----------#\r\n#The #MAGISK tag is required, dont remove it\r\n#MAGISK\r\nsetdefault   magisk_support       on\r\nsetdefault   ensure_rw            on\r\nsetdefault   import_addons        off\r\nsetdefault   apex_mount           off\r\nsetdefault   overwrite_symlinks   off\r\nsetdefault   devices              off\r\nsetdefault   devices_alert        on\r\nsetdefault   dalvik_memory        800M\r\nsetdefault   extraction_speed     4M\r\nsetdefault   off_readonly         ""\r\nsetdefault   permissions          "0:0:0755:0644"\r\n#-----------------------------------------------#\r\n\r\nui_print "--------------------------------"\r\nui_print "          ElementaryOS          "\r\nui_print "           OneUI 3.1            "\r\nui_print "--------------------------------"\r\nui_print "           by BlassGO           "\r\nui_print "--------------------------------"\r\nui_print " "\r\n\r\nui_print "-------------------"\r\nui_print " UNMOUNT           "\r\nui_print "-------------------"\r\nui_print " "\r\numount_all\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING PARAM  "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip param.bin $(find_block up_param)\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING KERNEL "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip boot.img $(find_block boot)\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING OMC    "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip optics.img $(find_block optics)\r\nupdate_zip prism.img $(find_block prism)\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING SUPER  "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip -xz super.img.xz $(find_block super)\r\n\r\nui_print "-------------------"\r\nui_print " DONE              "\r\nui_print "-------------------"\r\nui_print " "\n'})}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"-xz"})," flag decompresses the XZ-compressed ",(0,t.jsx)(r.code,{children:"super.img.xz"})," before flashing. This method is ideal for large RAW images but takes longer than Sparse."]})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"rom-installation-sparse",children:"ROM Installation (Sparse)"}),"\n",(0,t.jsx)(r.p,{children:"Installs a ROM using Sparse images, exclusive to 64-bit devices."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'#-----------Dynamic Installer Configs-----------#\r\n#The #MAGISK tag is required, dont remove it\r\n#MAGISK\r\nsetdefault   magisk_support       on\r\nsetdefault   ensure_rw            on\r\nsetdefault   import_addons        off\r\nsetdefault   apex_mount           off\r\nsetdefault   overwrite_symlinks   off\r\nsetdefault   devices              off\r\nsetdefault   devices_alert        on\r\nsetdefault   dalvik_memory        800M\r\nsetdefault   extraction_speed     4M\r\nsetdefault   off_readonly         ""\r\nsetdefault   permissions          "0:0:0755:0644"\r\n#-----------------------------------------------#\r\n\r\nui_print "--------------------------------"\r\nui_print "          ElementaryOS          "\r\nui_print "           OneUI 3.1            "\r\nui_print "--------------------------------"\r\nui_print "           by BlassGO           "\r\nui_print "--------------------------------"\r\nui_print " "\r\n\r\nui_print "-------------------"\r\nui_print " UNMOUNT           "\r\nui_print "-------------------"\r\nui_print " "\r\numount_all\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING PARAM  "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip param.bin $(find_block up_param)\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING KERNEL "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip boot.img $(find_block boot)\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING OMC    "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip -sparse optics.img $(find_block optics)\r\nupdate_zip -sparse prism.img $(find_block prism)\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING SUPER  "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip -sparse super.img $(find_block super)\r\n\r\nui_print "-------------------"\r\nui_print " DONE              "\r\nui_print "-------------------"\r\nui_print " "\n'})}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"-sparse"})," flag converts Sparse images to RAW during installation, requiring the ",(0,t.jsx)(r.code,{children:"simg2img"})," plugin in ",(0,t.jsx)(r.code,{children:"META-INF/addons/extra.zip"}),"."]})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"rom-installation-from-internal-memory",children:"ROM Installation (From Internal Memory)"}),"\n",(0,t.jsxs)(r.p,{children:["Installs a ROM using Sparse images from internal memory (",(0,t.jsx)(r.code,{children:"/sdcard"}),"), useful for large images like SUPER when other methods fail."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'#-----------Dynamic Installer Configs-----------#\r\n#The #MAGISK tag is required, dont remove it\r\n#MAGISK\r\nsetdefault   magisk_support       on\r\nsetdefault   ensure_rw            on\r\nsetdefault   import_addons        off\r\nsetdefault   apex_mount           off\r\nsetdefault   overwrite_symlinks   off\r\nsetdefault   devices              off\r\nsetdefault   devices_alert        on\r\nsetdefault   dalvik_memory        800M\r\nsetdefault   extraction_speed     4M\r\nsetdefault   off_readonly         ""\r\nsetdefault   permissions          "0:0:0755:0644"\r\n#-----------------------------------------------#\r\n\r\nui_print "--------------------------------"\r\nui_print "          ElementaryOS          "\r\nui_print "           OneUI 3.1            "\r\nui_print "--------------------------------"\r\nui_print "           by BlassGO           "\r\nui_print "--------------------------------"\r\nui_print " "\r\n\r\nui_print "-------------------"\r\nui_print " UNMOUNT           "\r\nui_print "-------------------"\r\nui_print " "\r\numount_all\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING PARAM  "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip param.bin $(find_block up_param)\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING KERNEL "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip boot.img $(find_block boot)\r\n\r\nui_print "-------------------"\r\nui_print " INSTALLING SUPER  "\r\nui_print "-------------------"\r\nui_print " "\r\nupdate_zip -tmp /sdcard -sparse super.img $(find_block super)\r\n\r\nui_print "-------------------"\r\nui_print " DONE              "\r\nui_print "-------------------"\r\nui_print " "\n'})}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"-tmp /sdcard"})," flag uses internal storage as a temporary space, reducing memory pressure for large Sparse images."]})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"only-extraction",children:"Only Extraction"}),"\n",(0,t.jsx)(r.p,{children:"Extracts files to system partitions without flashing images, useful for simple modifications."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'#-----------Dynamic Installer Configs-----------#\r\n#The #MAGISK tag is required, dont remove it\r\n#MAGISK\r\nsetdefault   magisk_support       on\r\nsetdefault   ensure_rw            on\r\nsetdefault   import_addons        off\r\nsetdefault   apex_mount           off\r\nsetdefault   overwrite_symlinks   off\r\nsetdefault   devices              off\r\nsetdefault   devices_alert        on\r\nsetdefault   dalvik_memory        800M\r\nsetdefault   extraction_speed     4M\r\nsetdefault   off_readonly         ""\r\nsetdefault   permissions          "0:0:0755:0644"\r\n#-----------------------------------------------#\r\n\r\nui_print " "\r\nui_print " -- Mounting partitions..."\r\nmount_all\r\n\r\nui_print " -- Extracting mods..."\r\npackage_extract_dir system /system\r\npackage_extract_dir vendor /vendor\r\npackage_extract_dir system_ext /system_ext\r\n\r\nui_print " -- Unmounting ALL"\r\numount_all\r\n\r\nui_print " "\r\nui_print " -- Done"\r\nui_print " "\n'})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"kernel-installation-multiple-devices",children:"Kernel Installation (Multiple Devices)"}),"\n",(0,t.jsx)(r.p,{children:"Installs a kernel for specific device models using conditional logic."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'#-----------Dynamic Installer Configs-----------#\r\n#The #MAGISK tag is required, dont remove it\r\n#MAGISK\r\nsetdefault   magisk_support       on\r\nsetdefault   ensure_rw            on\r\nsetdefault   import_addons        off\r\nsetdefault   apex_mount           off\r\nsetdefault   overwrite_symlinks   off\r\nsetdefault   devices              "SM-A515F:SM-A515FN:m14x"\r\nsetdefault   devices_alert        on\r\nsetdefault   dalvik_memory        800M\r\nsetdefault   extraction_speed     4M\r\nsetdefault   off_readonly         ""\r\nsetdefault   permissions          "0:0:0755:0644"\r\n#-----------------------------------------------#\r\n\r\nui_print "--------------------------------"\r\nui_print "          Something Kernel      "\r\nui_print "             OneUI 3.1          "\r\nui_print "--------------------------------"\r\nui_print "           by BlassGO           "\r\nui_print "--------------------------------"\r\nui_print " "\r\n\r\nui_print "------------------------------------"\r\nui_print " Installing Kernel for:  $DEVICE    "\r\nui_print "------------------------------------"\r\nui_print " "\r\n\r\nif is_equal "$DEVICE" "SM-A515F"; then\r\n    FOLDER="__A515F__"\r\nelif is_equal "$DEVICE" "SM-A515FN"; then\r\n    FOLDER="__A515FN__"\r\nelif is_equal "$DEVICE" "m14x"; then\r\n    FOLDER="__m14x__"\r\nfi\r\n\r\nupdate_zip "$FOLDER/boot.img" $(find_block boot)\r\nupdate_zip "$FOLDER/dtbo.img" $(find_block dtbo)\r\n\r\nui_print "-------------------"\r\nui_print " Done              "\r\nui_print "-------------------"\r\nui_print " "\n'})}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"setdefault devices"})," lists supported models, and ",(0,t.jsx)(r.code,{children:"$DEVICE"})," is set automatically. Check device-specific guidelines in ",(0,t.jsx)(r.a,{href:"/docs/environment/updater-configs",children:"Configs"}),"."]})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"magisk-module",children:"Magisk Module"}),"\n",(0,t.jsxs)(r.p,{children:["Installs a Magisk module by extracting files to ",(0,t.jsx)(r.code,{children:"$MODPATH"}),"."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'# Magisk modules use $MODPATH as main path\r\n\r\nui_print "-------------------------------------------------- "\r\nui_print " MODS for Android                  "\r\nui_print "-------------------------------------------------- "\r\nui_print " by @BlassGO      |   Version: 1.0                 "\r\nui_print "-------------------------------------------------- "\r\nui_print " "\r\n\r\nui_print " -- Installing MODS in /system"\r\npackage_extract_dir system "$MODPATH/system"\r\n\r\nui_print " -- Installing MODS in /vendor"\r\npackage_extract_dir vendor "$MODPATH/system/vendor"\r\n\r\nui_print " -- Installing MODS in /product"\r\npackage_extract_dir product "$MODPATH/system/product"\r\n\r\nui_print " -- Fixing Contexts"\r\nset_context /system "$MODPATH/system"\r\n\r\nui_print " "\r\nui_print " -- Done"\r\nui_print " "\n'})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"magisk-module-apktool",children:"Magisk Module (APKTOOL)"}),"\n",(0,t.jsxs)(r.p,{children:["Modifies an APK using ",(0,t.jsx)(r.a,{href:"./apk-jar-actions/apk-advanced#dynamic_apktool",children:"dynamic_apktool"})," and installs it as a Magisk module."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'# Magisk modules use $MODPATH as main path\r\n\r\nenable=\'\r\n    .locals 1\r\n    const/4 v0, 0x1\r\n    return v0\r\n\'\r\n\r\nui_print " -- Finding SystemUI.apk"\r\nAPK=$(find_installed_apk com.android.systemui)\r\n\r\nui_print " -- Checking results"\r\nif undefined APK; then\r\n   abort " CANT FIND: SystemUI.apk"\r\nfi\r\n\r\nui_print " -- Decompiling SystemUI.apk"\r\ndynamic_apktool -decompile "$APK" -output "$TMP/decompiled"\r\n\r\nui_print " -- Patching SystemUI.apk"\r\nsmali_kit -check -method "isUnlockingWithBiometricAllowed" -remake "$enable" -dir "$TMP/decompiled"\r\n\r\nui_print " -- Recompiling SystemUI.apk"\r\ndynamic_apktool -no-api -preserve-signature -recompile "$TMP/decompiled" -output "$MODPATH$APK"\r\n\r\nui_print " -- Checking results"\r\nif ! is_valid "$MODPATH$APK"; then\r\n   abort "Some error in the APK recompilation"\r\nfi\r\n\r\nui_print " -- Fixing Context "\r\nset_context "$APK" "$MODPATH$APK"\r\n\r\nui_print " "\r\nui_print " -- Done "\r\nui_print " "\n'})}),"\n",(0,t.jsx)(r.admonition,{type:"warning",children:(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"dynamic_apktool"})," only decompiles ",(0,t.jsx)(r.code,{children:"classes.dex"}),", not ",(0,t.jsx)(r.code,{children:"res"})," content. See ",(0,t.jsx)(r.a,{href:"/docs/introduction#bugs",children:"known bugs"})," for details."]})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"magisk-and-kernelsu-module",children:"Magisk and KernelSU Module"}),"\n",(0,t.jsx)(r.p,{children:"Installs a module compatible with both Magisk and KernelSU, detecting the installation method."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'# Magisk modules use $MODPATH as main path\r\n\r\nui_print "-------------------------------------------------- "\r\nui_print " MODS for Android                  "\r\nui_print "-------------------------------------------------- "\r\nui_print " by @BlassGO      |   Version: 1.0                 "\r\nui_print "-------------------------------------------------- "\r\nui_print " "\r\n\r\nif is_equal $CUSTOM_SETUP  0; then\r\n   ui_print " - Installation by MAGISK "\r\nelse\r\n   ui_print " - Installation by KernelSU (or something else)"\r\nfi\r\n\r\nui_print " -- Installing MODS in /system"\r\npackage_extract_dir system "$MODPATH/system"\r\n\r\nui_print " -- Installing MODS in /vendor"\r\npackage_extract_dir vendor "$MODPATH/system/vendor"\r\n\r\nui_print " -- Installing MODS in /product"\r\npackage_extract_dir product "$MODPATH/system/product"\r\n\r\nui_print " -- Fixing Contexts"\r\nset_context /system "$MODPATH/system"\r\n\r\nui_print " "\r\nui_print " -- Done"\r\nui_print " "\n'})}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"$CUSTOM_SETUP"})," is ",(0,t.jsx)(r.code,{children:"0"})," for Magisk, ",(0,t.jsx)(r.code,{children:"1"})," for Test Mode, or ",(0,t.jsx)(r.code,{children:"2"})," for external methods like KernelSU. See ",(0,t.jsx)(r.a,{href:"/docs/fundamentals/native-variables",children:"Native Variables"}),"."]})})]})}function u(n={}){const{wrapper:r}={...(0,s.R)(),...n.components};return r?(0,t.jsx)(r,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},8453:(n,r,e)=>{e.d(r,{R:()=>a,x:()=>l});var i=e(6540);const t={},s=i.createContext(t);function a(n){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function l(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),i.createElement(s.Provider,{value:r},n.children)}}}]);