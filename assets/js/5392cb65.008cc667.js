"use strict";(self.webpackChunkdynamic_installer_doc=self.webpackChunkdynamic_installer_doc||[]).push([[8902],{1470:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"fundamentals/logic","title":"\ud83e\udde0 Logic of Expressions","description":"Logical connectors for conditional execution.","source":"@site/docs/fundamentals/logic.md","sourceDirName":"fundamentals","slug":"/fundamentals/logic","permalink":"/DynamicInstaller_Doc/docs/fundamentals/logic","draft":false,"unlisted":false,"editUrl":"https://github.com/BlassGO/DynamicInstaller_Doc/edit/main/docs/fundamentals/logic.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"id":"logic","title":"\ud83e\udde0 Logic of Expressions","description":"Logical connectors for conditional execution."},"sidebar":"tutorialSidebar","previous":{"title":"\u2699\ufe0f Subprocesses","permalink":"/DynamicInstaller_Doc/docs/fundamentals/subprocesses"},"next":{"title":"\ud83d\udd04 Shell Loops","permalink":"/DynamicInstaller_Doc/docs/fundamentals/simple-loops"}}');var o=s(4848),t=s(8453);const r={sidebar_position:4,id:"logic",title:"\ud83e\udde0 Logic of Expressions",description:"Logical connectors for conditional execution."},c="\ud83e\udde0 Logic of Expressions",a={},l=[{value:"&amp;&amp; (AND)",id:"-and",level:2},{value:"|| (OR)",id:"-or",level:2},{value:"() (Grouping)",id:"-grouping",level:2},{value:"not / !",id:"not--",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"-logic-of-expressions",children:"\ud83e\udde0 Logic of Expressions"})}),"\n",(0,o.jsx)(n.p,{children:"Support for logical connectors in expressions."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-and",children:"&& (AND)"}),"\n",(0,o.jsx)(n.p,{children:'Joins expressions/actions with "and" logic. Succeeds only if all succeed.'}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# All must exist\r\nexist "/system/build.prop" && exist "/system/ole" && exist "/system/a"\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"If an expression fails, subsequent ones are skipped."})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-or",children:"|| (OR)"}),"\n",(0,o.jsx)(n.p,{children:'Joins expressions/actions with "or" logic. Succeeds if any succeed.'}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Any must exist\r\nexist "/system/build.prop" || exist "/system/ole" || exist "/system/a"\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"If an expression succeeds, subsequent ones are skipped."})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-grouping",children:"() (Grouping)"}),"\n",(0,o.jsx)(n.p,{children:"Groups multiple expressions/actions into a single expression."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Grouped AND/OR\r\n(exist "/system/build.prop" && exist "/system/ole") || (exist "/system/huh" && exist "/system/a")\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"Grouped expressions run in a separate scope, not affecting the main script."})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"not--",children:"not / !"}),"\n",(0,o.jsx)(n.p,{children:"Negates an expression/action, inverting its success/failure."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Negate individual checks\r\nnot exist "/system/build.prop" && not exist "/system/ole" && not exist "/system/a"\r\n\r\n# Negate grouped checks (note && becomes || in negation)\r\nnot (exist "/system/build.prop" || exist "/system/ole" || exist "/system/a")\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["When negating a group, ",(0,o.jsx)(n.code,{children:"&&"})," becomes ",(0,o.jsx)(n.code,{children:"||"})," and vice versa due to logical inversion."]})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(6540);const o={},t=i.createContext(o);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);