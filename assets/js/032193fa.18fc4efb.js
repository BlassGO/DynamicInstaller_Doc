"use strict";(self.webpackChunkdynamic_installer_doc=self.webpackChunkdynamic_installer_doc||[]).push([[9724],{5499:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"general-actions/strings","title":"\ud83d\udd24 String Manipulation Tools","description":"Tools for processing and manipulating strings.","source":"@site/docs/general-actions/strings.md","sourceDirName":"general-actions","slug":"/general-actions/strings","permalink":"/DynamicInstaller_Doc/docs/general-actions/strings","draft":false,"unlisted":false,"editUrl":"https://github.com/BlassGO/DynamicInstaller_Doc/edit/main/docs/general-actions/strings.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_position":15,"id":"strings","title":"\ud83d\udd24 String Manipulation Tools","description":"Tools for processing and manipulating strings."},"sidebar":"tutorialSidebar","previous":{"title":"\u2699\ufe0f Execution Tools","permalink":"/DynamicInstaller_Doc/docs/general-actions/execution"},"next":{"title":"\ud83d\udd22 Conversion Tools","permalink":"/DynamicInstaller_Doc/docs/general-actions/conversion"}}');var s=n(4848),i=n(8453);const l={sidebar_position:15,id:"strings",title:"\ud83d\udd24 String Manipulation Tools",description:"Tools for processing and manipulating strings."},d="\ud83d\udd24 String Manipulation Tools",c={},o=[{value:"split_string",id:"split_string",level:2},{value:"split_cut",id:"split_cut",level:2},{value:"split_extract",id:"split_extract",level:2},{value:"repeat",id:"repeat",level:2},{value:"string",id:"string",level:2}];function a(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"-string-manipulation-tools",children:"\ud83d\udd24 String Manipulation Tools"})}),"\n",(0,s.jsx)(r.p,{children:"Utilities for working with strings."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"split_string",children:"split_string"}),"\n",(0,s.jsx)(r.p,{children:"Splits text based on a delimiter."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Argument"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"SEP"})}),(0,s.jsx)(r.td,{children:"Separator pattern"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"TEXT"})}),(0,s.jsx)(r.td,{children:"Text to split"})]})]})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:'split_string ":" "A B: C D E: FG"  # Returns: A B, C D E, FG\r\nsplit_string "word" "A Bword C D E word FG"  # Returns: A B, C D E, FG\n'})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"split_cut",children:"split_cut"}),"\n",(0,s.jsx)(r.p,{children:"Splits text and returns up to the nth result."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Argument"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"SEP"})}),(0,s.jsx)(r.td,{children:"Separator pattern"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"N"})}),(0,s.jsx)(r.td,{children:"Number of splits to keep"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"TEXT"})}),(0,s.jsx)(r.td,{children:"Text to split"})]})]})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:'split_cut ":" 2 "A B: C D E: FG"  # Returns: A B, C D E\r\nsplit_cut "word" 1 "A Bword C D E word FG"  # Returns: A B\n'})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"split_extract",children:"split_extract"}),"\n",(0,s.jsx)(r.p,{children:"Splits text and returns the nth result."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Argument"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"SEP"})}),(0,s.jsx)(r.td,{children:"Separator pattern"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"N"})}),(0,s.jsx)(r.td,{children:"Index of result to return"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"TEXT"})}),(0,s.jsx)(r.td,{children:"Text to split"})]})]})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:'split_extract ":" 2 "A B: C D E: FG"  # Returns: C D E\r\nsplit_extract "word" 3 "A Bword C D E word FG"  # Returns: FG\n'})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"repeat",children:"repeat"}),"\n",(0,s.jsx)(r.p,{children:"Repeats text a specified number of times."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Argument"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"N"})}),(0,s.jsx)(r.td,{children:"Number of repetitions"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"TEXT"})}),(0,s.jsx)(r.td,{children:"Text to repeat"})]})]})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"repeat 5 OLE  # Returns: OLEOLEOLEOLEOLE\n"})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"string",children:"string"}),"\n",(0,s.jsx)(r.p,{children:"Multi-utility tool for string manipulation."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Flag"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"replace OLD NEW"})}),(0,s.jsx)(r.td,{children:"Replace OLD with NEW (multiple allowed)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"replace_line OLD NEW"})}),(0,s.jsx)(r.td,{children:"Replace lines containing OLD with NEW (multiple allowed)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"remove TEXT"})}),(0,s.jsx)(r.td,{children:"Remove TEXT (multiple allowed)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"inside START END"})}),(0,s.jsx)(r.td,{children:"Extract text between START and END"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"extract START END"})}),(0,s.jsx)(r.td,{children:"Extract content between lines START and END"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"complete_extract START END"})}),(0,s.jsx)(r.td,{children:"Include START/END lines in extraction"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"-after-line LINE TEXT"})}),(0,s.jsx)(r.td,{children:"Add TEXT after LINE (multiple allowed)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"-before-line LINE TEXT"})}),(0,s.jsx)(r.td,{children:"Add TEXT before LINE (multiple allowed)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"escape"})}),(0,s.jsx)(r.td,{children:"Escape special characters (e.g., , $, *)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"upper"})}),(0,s.jsx)(r.td,{children:"Convert to uppercase"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"lower"})}),(0,s.jsx)(r.td,{children:"Convert to lowercase"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"count"})}),(0,s.jsx)(r.td,{children:"Return character count"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"-r"})}),(0,s.jsx)(r.td,{children:"Apply recursively (all occurrences)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"-p PATTERN"})}),(0,s.jsx)(r.td,{children:"Filter extract results by PATTERN"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"-f FILE"})}),(0,s.jsx)(r.td,{children:"Load text from FILE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"TEXT"})}),(0,s.jsx)(r.td,{children:"String to process"})]})]})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:'# Replace\r\nstring replace "A" "B" "Hi, A will be replaced with B"\r\n\r\n# Recursive replace\r\nstring -r replace "A" "B" "Hi, AAAA will be replaced with B"\r\n\r\n# Remove\r\nstring -r remove "A" "This AAAAAA will be removed"\r\n\r\n# Inside\r\nstring inside "A" "B" "Hi A this content will be return B sayonara"\r\n\r\n# Uppercase\r\nstring upper "this content will be return as uppercase"\r\n\r\n# Lowercase\r\nstring lower "THIS CONTENT WILL BE RETURN AS LOWERCASE"\r\n\r\n# Multiple actions\r\nstring remove "A" remove "B" replace "C" "Ole" "ABC text"\r\n\r\n# Extract with pattern\r\nexample="\r\nHi,\r\nHello world\r\nA\r\nB\r\nC\r\nOkay, sayonara\r\nHello world 2\r\nD\r\nE\r\nF\r\nsayonara again\r\n"\r\nstring -r -p "E" extract "world" "sayonara" "$example"\r\n\r\n# Add lines\r\nstring -after-line "world" "ADD this after" "$example"\n'})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>d});var t=n(6540);const s={},i=t.createContext(s);function l(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);