"use strict";(self.webpackChunkdynamic_installer_doc=self.webpackChunkdynamic_installer_doc||[]).push([[9358],{5622:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"general-actions/editing-files","title":"\u270f\ufe0f Editing Files Tools","description":"Tools for modifying file contents.","source":"@site/docs/general-actions/editing-files.mdx","sourceDirName":"general-actions","slug":"/general-actions/editing-files","permalink":"/DynamicInstaller_Doc/docs/general-actions/editing-files","draft":false,"unlisted":false,"editUrl":"https://github.com/BlassGO/DynamicInstaller_Doc/edit/main/docs/general-actions/editing-files.mdx","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13,"id":"editing-files","title":"\u270f\ufe0f Editing Files Tools","description":"Tools for modifying file contents."},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd10 Get/Set Contexts Tools","permalink":"/DynamicInstaller_Doc/docs/general-actions/contexts"},"next":{"title":"\u2699\ufe0f Execution Tools","permalink":"/DynamicInstaller_Doc/docs/general-actions/execution"}}');var i=n(4848),t=n(8453),d=n(6012);const l={sidebar_position:13,id:"editing-files",title:"\u270f\ufe0f Editing Files Tools",description:"Tools for modifying file contents."},c="\u270f\ufe0f Editing Files Tools",o={},h=[{value:"savestate",id:"savestate",level:2},{value:"patch_fstab",id:"patch_fstab",level:2},{value:"update_file",id:"update_file",level:2},{value:"update_file_string",id:"update_file_string",level:2},{value:"xml_kit",id:"xml_kit",level:2},{value:"add_lines",id:"add_lines",level:2},{value:"add_lines_string",id:"add_lines_string",level:2},{value:"replace",id:"replace",level:2},{value:"remove",id:"remove",level:2},{value:"replace_name",id:"replace_name",level:2}];function a(e){const s={admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"\ufe0f-editing-files-tools",children:"\u270f\ufe0f Editing Files Tools"})}),"\n",(0,i.jsx)(s.p,{children:"Utilities for editing files."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"savestate",children:"savestate"}),"\n",(0,i.jsx)(s.p,{children:"Records a file\u2019s current state into a variable."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"VAR"})}),(0,i.jsx)(s.td,{children:"Variable to store state"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"FILE"})}),(0,i.jsx)(s.td,{children:"File to check"})]})]})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'savestate test /system/build.prop\r\nupdate_file_string "ro.product.system.model=Just Test" /system/build.prop\r\nsavestate test2 /system/build.prop\r\n\r\nif [[ "$test" == "$test2" ]]; then\r\n    ui_print "build.prop was not edited"\r\nelse\r\n    ui_print "build.prop changed"\r\nfi\n'})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"patch_fstab",children:"patch_fstab"}),"\n",(0,i.jsx)(s.p,{children:"Replaces properties in fstab files."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"LINE"})}),(0,i.jsx)(s.td,{children:"Pattern to find line"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"PROP"})}),(0,i.jsx)(s.td,{children:"Property to find"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"NEW"})}),(0,i.jsx)(s.td,{children:"New property value"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"FILE"})}),(0,i.jsx)(s.td,{children:"Fstab file"})]})]})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'# Replace fileencryption=ice with encryptable in userdata line\r\npatch_fstab userdata "fileencryption" "encryptable" "/vendor/etc/fstab.qcom"\n'})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"update_file",children:"update_file"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["Supports: ",(0,i.jsx)(d.A,{type:"addon",children:"_addon"})," ",(0,i.jsx)(d.A,{type:"zip",children:"_zip"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Updates existing prop lines in a file."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"SRC"})}),(0,i.jsx)(s.td,{children:"File with new props"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"DEST"})}),(0,i.jsx)(s.td,{children:"Destination file"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-force"})}),(0,i.jsx)(s.td,{children:"If any of the new props do not exist in the destination file, ensure they are added to the end"})]})]})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'# Only props that already exist in the destination file will be updated\r\nupdate_file "NewPropLines.txt" "/system/build.prop"\r\n\r\n# Ensures to add all the props even if they do not exist in the destination file\r\nupdate_file -force "NewPropLines.txt" "/system/build.prop"\n'})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"update_file_string",children:"update_file_string"}),"\n",(0,i.jsx)(s.p,{children:"Updates prop lines directly with strings."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"LINE"})}),(0,i.jsx)(s.td,{children:"Line(s) to update"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"FILE"})}),(0,i.jsx)(s.td,{children:"Destination file"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-force"})}),(0,i.jsx)(s.td,{children:"If any of the new props do not exist in the destination file, ensure they are added to the end"})]})]})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'# Only props that already exist in the destination file will be updated\r\nupdate_file_string "ro.product.system.model=NEW MODEL" /system/build.prop\r\n\r\n# Ensures to add all the props even if they do not exist in the destination file\r\nupdate_file_string -force "ro.product.system.model=NEW MODEL" "ro.product.system.name=NEW NAME" "ro.build.display.id=NEW ID" /system/build.prop\n'})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"xml_kit",children:"xml_kit"}),"\n",(0,i.jsx)(s.p,{children:"Edits XML files by targeting specific sections."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-open START END"})}),(0,i.jsx)(s.td,{children:"Start and end tags of XML section (multiple allowed)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-in PATTERN"})}),(0,i.jsx)(s.td,{children:"Pattern to filter section"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-change-value ATTR VAL"})}),(0,i.jsxs)(s.td,{children:["Change attribute value (",(0,i.jsx)(s.code,{children:'ATTR="VAL"'}),")"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-change-tag TAG VAL"})}),(0,i.jsxs)(s.td,{children:["Change value between tags (",(0,i.jsx)(s.code,{children:"<TAG> VAL </TAG>"}),")"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-change-content OLD NEW"})}),(0,i.jsx)(s.td,{children:"Replace text in section"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-add TEXT"})}),(0,i.jsx)(s.td,{children:"Add text after section"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-add-inside TEXT"})}),(0,i.jsx)(s.td,{children:"Add text inside section"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-after-line LINE TEXT"})}),(0,i.jsx)(s.td,{children:"Add text after line"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-before-line LINE TEXT"})}),(0,i.jsx)(s.td,{children:"Add text before line"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-get-value"})}),(0,i.jsx)(s.td,{children:"Returns the current content of the section without including opening and closing tags."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-remove"})}),(0,i.jsxs)(s.td,{children:["Removes the entire current section of the last ",(0,i.jsx)(s.code,{children:"-open"})," done"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-print"})}),(0,i.jsx)(s.td,{children:"Print full result instead of editing"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-print-result"})}),(0,i.jsxs)(s.td,{children:["Similar to ",(0,i.jsx)(s.code,{children:"-print"})," but only prints the modified ",(0,i.jsx)(s.code,{children:"-open"})," sections without merging them into the rest of the structure."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-no-auto-spaces"})}),(0,i.jsx)(s.td,{children:"Disable auto-spacing"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"FILE"})}),(0,i.jsx)(s.td,{children:"XML file to edit"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Test.xml"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:'<users version="1.0">\r\n  <user id="1234">\r\n    <name>BlassGO</name>\r\n    <age>22</age>\r\n  </user>\r\n\r\n  <user id="5678" isAdmin="true">\r\n    <name>Ismael</name>\r\n    <age>22</age>\r\n  </user>\r\n  \r\n  <user id="9123"/>\r\n</users>\n'})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Open section\r\nxml_kit -open 'users' 'users' /sdcard/Test.xml\r\n\r\n# Nested sections\r\n# If modifications are not specified only the sections that matches are printed.\r\nxml_kit -open 'users' 'users' -open 'user' 'user' /sdcard/Test.xml\r\n\r\n# Open sections with self-closing tags\r\n# Only sections with the specified closure are considered\r\nxml_kit -open 'users' 'users' -open 'user' '/>' /sdcard/Test.xml  # Only user id=\"9123\"\r\n\r\n# Filter sections by an attribute, regardless of its value\r\n# The order of the attributes doesn't matter\r\nxml_kit -open 'users' 'users' -open 'user isAdmin' 'user' /sdcard/Test.xml\r\n\r\n# Filter sections by an attribute value\r\nxml_kit -open 'users' 'users' -open 'user id=\"5678\"' 'user' /sdcard/Test.xml\r\n\r\n# Change attribute\r\nxml_kit -open 'users' 'users' -open 'user id=\"5678\"' 'user' -change-value id \"NEW_ID\" /sdcard/Test.xml\r\n\r\n# Change tag value\r\nxml_kit -open 'users' 'users' -open 'user id=\"1234\"' 'user' -change-tag name \"Just me\" /sdcard/Test.xml\r\n\r\n# Add text\r\nxml_kit -open 'users' 'users' -open 'user id=\"1234\"' 'user' -add \"Just Test\" /sdcard/Test.xml\r\n\r\n# Add text inside\r\n# If a filtering is not applied, the changes will be applied to all macthes\r\nxml_kit -open 'users' 'users' -open 'user' 'user' -add-inside \"Add me in all users\" /sdcard/Test.xml\r\n\r\n# After line\r\nxml_kit -open 'users' 'users' -open 'user' 'user' -after-line \"BlassGO\" \"Just Test\" /sdcard/Test.xml\r\n\r\n# Before line\r\n# The -in parameter searches for matches throughout the entire section\r\nxml_kit -open 'users' 'users' -open 'user' 'user' -in Ismael -before-line \"<age>\" \"Just Test\" /sdcard/Test.xml\r\n\r\n# Get the content of a section\r\nuser_name=$(xml_kit -open 'users' 'users' -open 'user id=\"5678\"' 'user' -open 'name' 'name' -get-value /sdcard/Test.xml)\r\nui_print \"The user name is: $user_name\" # Ismael\r\n\r\n# Get the content of all sections\r\nuser_names=$(xml_kit -open 'users' 'users' -open 'user' 'user' -open 'name' 'name' -get-value /sdcard/Test.xml)\r\nui_print \"The user names are: $user_names\" # BlassGO, Ismael\r\n\r\n# Remove section\r\n# The entire user section with id 1234 will be removed\r\nxml_kit -open 'users' 'users' -open 'user id=\"1234\"' 'user' -remove /sdcard/Test.xml\n"})}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsx)(s.p,{children:"It supports tags with attributes that span multiple lines, which is common for readability. However, these line breaks are not guaranteed to be preserved."})}),"\n",(0,i.jsxs)(s.admonition,{type:"note",children:[(0,i.jsx)(s.p,{children:(0,i.jsxs)(s.strong,{children:[(0,i.jsx)(s.code,{children:"-in"})," + ",(0,i.jsx)(s.code,{children:"-get-value"})," case:"]})}),(0,i.jsxs)(s.p,{children:["When you use the ",(0,i.jsx)(s.code,{children:"-in"})," parameter, it searches for a match within the content of the deepest open section. This is where the conflict with ",(0,i.jsx)(s.code,{children:"-get-value"})," happens. Typically, ",(0,i.jsx)(s.code,{children:"-get-value"})," is also used to retrieve content from the deepest open section. This causes ",(0,i.jsx)(s.code,{children:"-in"})," to apply its filter directly to the value of the segment you're trying to retrieve. While this can be useful if you're trying to partially match a value, for most cases, it's best to use the native attribute filter."]})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"add_lines",children:"add_lines"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["Supports: ",(0,i.jsx)(d.A,{type:"addon",children:"_addon"})," ",(0,i.jsx)(d.A,{type:"zip",children:"_zip"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Adds lines from multiple files to a destination file."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-after-line LINE"})}),(0,i.jsx)(s.td,{children:"Add after this line (multiple allowed)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-before-line LINE"})}),(0,i.jsx)(s.td,{children:"Add before this line (multiple allowed)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"SRC"})}),(0,i.jsx)(s.td,{children:"Source file(s)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"DEST"})}),(0,i.jsx)(s.td,{children:"Destination file"})]})]})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'add_lines "Add.txt" /system/build.prop\r\nadd_lines "Add.txt" "Add2.txt" "Add3.txt" /system/build.prop\r\nadd_lines -after-line "Some line" "Add.txt" /system/build.prop\r\nadd_lines -before-line "Some line" "Add.txt" /system/build.prop\r\nadd_lines -after-line "Some line" "Add.txt" -after-line "Some line 2" "Add2.txt" -before-line "Some Line 3" "Add3.txt" /system/build.prop\n'})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"add_lines_string",children:"add_lines_string"}),"\n",(0,i.jsx)(s.p,{children:"Adds lines directly as strings to a file."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-after-line LINE"})}),(0,i.jsx)(s.td,{children:"Add after this line (multiple allowed)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-before-line LINE"})}),(0,i.jsx)(s.td,{children:"Add before this line (multiple allowed)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"LINE"})}),(0,i.jsx)(s.td,{children:"Line(s) to add"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"DEST"})}),(0,i.jsx)(s.td,{children:"Destination file"})]})]})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'add_lines_string "New line" "New line 2" /system/build.prop\r\nadd_lines_string "" /system/build.prop  # Empty line\r\nadd_lines_string -after-line "Some line" "add this after" -after-line "Some line 2" "add this after" /system/build.prop\r\nadd_lines_string -before-line "Some line" "add this before" -before-line "Some line 2" "add this before" /system/build.prop\r\nadd_lines_string "New line" " " "New line 2" " " /system/build.prop\n'})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"replace",children:"replace"}),"\n",(0,i.jsx)(s.p,{children:"Replaces text in a file or directory."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"OLD"})}),(0,i.jsx)(s.td,{children:"Text to replace"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"NEW"})}),(0,i.jsx)(s.td,{children:"Replacement text"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"PATH"})}),(0,i.jsx)(s.td,{children:"File or directory"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-r"})}),(0,i.jsx)(s.td,{children:"Recursive (whole directory)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-a"})}),(0,i.jsx)(s.td,{children:"Replace entire line containing text"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-only-first"})}),(0,i.jsxs)(s.td,{children:["Just replace the first coincidence (if used ",(0,i.jsx)(s.code,{children:"-r"})," this applies to each file, not only the first)"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-follow-symlinks"})}),(0,i.jsxs)(s.td,{children:["Follow Symlinks especially when used ",(0,i.jsx)(s.code,{children:"-r"})]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-bytes"})}),(0,i.jsxs)(s.td,{children:["How many bytes read for the check of readability (",(0,i.jsx)(s.code,{children:"Default: 32"}),")"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-min-bytes"})}),(0,i.jsxs)(s.td,{children:["How many bytes should be readable as text to approve readability check (",(0,i.jsx)(s.code,{children:"Default: 4"}),")"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-no-check"})}),(0,i.jsx)(s.td,{children:"Disable the check of readability"})]})]})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'# All matches will be replaced\r\nreplace "HUH" "OLE" /system/build.prop\r\n\r\n# Replace entire line containing text\r\nreplace -a "HUH" "OLE" /system/build.prop\r\n\r\n# Search and replace in all files in a directory\r\nreplace -r "HUH" "OLE" /system\r\n\r\n# Only replace if the file as a minimum of 50 readable bytes \r\nreplace -bytes 100 -min-bytes 50 "HUH" "OLE" /system/whats_this\r\n\r\n# Do multiple replacements\r\nreplace "HUH" "OLE" "HAH" "YAH" /system/build.prop\n'})}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:"Exclusive for text files, so the readability check is important to avoid corrupting binary files or ending the execution abruptly."})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"remove",children:"remove"}),"\n",(0,i.jsx)(s.p,{children:"Removes text from a file or directory."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"TEXT"})}),(0,i.jsx)(s.td,{children:"Text to remove"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"PATH"})}),(0,i.jsx)(s.td,{children:"File or directory"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-r"})}),(0,i.jsx)(s.td,{children:"Recursive (whole directory)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-a"})}),(0,i.jsx)(s.td,{children:"Remove entire line containing text"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-only-first"})}),(0,i.jsxs)(s.td,{children:["Just remove the first coincidence (if used ",(0,i.jsx)(s.code,{children:"-r"})," this applies to each file, not only the first)"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-follow-symlinks"})}),(0,i.jsxs)(s.td,{children:["Follow Symlinks especially when used ",(0,i.jsx)(s.code,{children:"-r"})]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-bytes"})}),(0,i.jsxs)(s.td,{children:["How many bytes read for the check of readability (",(0,i.jsx)(s.code,{children:"Default: 32"}),")"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-min-bytes"})}),(0,i.jsxs)(s.td,{children:["How many bytes should be readable as text to approve readability check (",(0,i.jsx)(s.code,{children:"Default: 4"}),")"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-no-check"})}),(0,i.jsx)(s.td,{children:"Disable the check of readability"})]})]})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'# All matches will be removed\r\nremove "HUH" /system/build.prop\r\n\r\n# Remove entire line containing text\r\nremove -a "HUH" /system/build.prop\r\n\r\n# Remove all empty lines\r\nremove -a "" /system/build.prop\r\n\r\n# Search and remove in all files in a directory\r\nremove -r "HUH" /system\r\n\r\n# Only remove if the file as a minimum of 50 readable bytes \r\nremove -bytes 100 -min-bytes 50 "HUH" /system/whats_this\r\n\r\n# Do multiple removals\r\nremove "HUH" "HAH" /system/build.prop\n'})}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:"Exclusive for text files, so the readability check is important to avoid corrupting binary files or ending the execution abruptly."})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"replace_name",children:"replace_name"}),"\n",(0,i.jsx)(s.p,{children:"Renames files/folders matching a pattern."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Argument"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"OLD"})}),(0,i.jsx)(s.td,{children:"Pattern to match"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"NEW"})}),(0,i.jsx)(s.td,{children:"New name/pattern"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"PATH"})}),(0,i.jsx)(s.td,{children:"File or directory"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-r"})}),(0,i.jsx)(s.td,{children:"Recursive (whole directory)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-f"})}),(0,i.jsx)(s.td,{children:"Files only"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-d"})}),(0,i.jsx)(s.td,{children:"Directories only"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-regex"})}),(0,i.jsx)(s.td,{children:"Use regular expressions"})]})]})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'replace_name ".jpg" ".png" /system/test.jpg\r\nreplace_name "old" "new" /system/folder_old\r\nreplace_name ".bak" "" /system/test.prop.bak\r\nreplace_name -r ".jpg" ".png" /system\r\nreplace_name -f -r ".bak" "" /system\r\nreplace_name -d -r "_ext" "_new" /system\r\nreplace_name -regex -r ".bak$" "" /system\n'})})]})}function x(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},6012:(e,s,n)=>{n.d(s,{A:()=>d});n(6540);var r=n(5293),i=n(8774),t=n(4848);const d=function({type:e,children:s,title:n}){const{isDarkTheme:d}=(0,r.G)(),l={default:{backgroundColor:"#f0f0f0",color:"#333"},addon:{backgroundColor:"#e1f5fe",color:"#0277bd"},zip:{backgroundColor:"#fce4ec",color:"#ad1457"}},c={default:{backgroundColor:"#424242",color:"#e0e0e0"},addon:{backgroundColor:"#4a6572",color:"#e0f7fa"},zip:{backgroundColor:"#6a1b9a",color:"#fce4ec"}},o=d?c[e]||c.default:l[e]||l.default,h=n||`This action supports the ${s} extension`;return"addon"===e||"zip"===e?(0,t.jsx)(i.A,{to:"/docs/environment/extensions-logic",children:(0,t.jsx)("span",{style:{...o,padding:"2px 6px",borderRadius:"4px",fontSize:"0.8em",margin:"0 4px",cursor:"pointer"},title:h,children:s})}):(0,t.jsx)("span",{style:{...o,padding:"2px 6px",borderRadius:"4px",fontSize:"0.8em",margin:"0 4px",cursor:"help"},title:h,children:s})}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>l});var r=n(6540);const i={},t=r.createContext(i);function d(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);