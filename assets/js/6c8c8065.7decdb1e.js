"use strict";(self.webpackChunkdynamic_installer_doc=self.webpackChunkdynamic_installer_doc||[]).push([[7578],{98:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"environment/extensions-logic","title":"\ud83d\udcd0 Actions Scope","description":"Using _addon and _zip extensions with actions.","source":"@site/docs/environment/extensions.md","sourceDirName":"environment","slug":"/environment/extensions-logic","permalink":"/DynamicInstaller_Doc/docs/environment/extensions-logic","draft":false,"unlisted":false,"editUrl":"https://github.com/BlassGO/DynamicInstaller_Doc/edit/main/docs/environment/extensions.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"id":"extensions-logic","title":"\ud83d\udcd0 Actions Scope","description":"Using _addon and _zip extensions with actions."},"sidebar":"tutorialSidebar","previous":{"title":"\u2699\ufe0f Configs","permalink":"/DynamicInstaller_Doc/docs/environment/updater-configs"},"next":{"title":"\ud83d\udd12 Read-Only","permalink":"/DynamicInstaller_Doc/docs/environment/readonly"}}');var o=i(4848),s=i(8453);const r={sidebar_position:2,id:"extensions-logic",title:"\ud83d\udcd0 Actions Scope",description:"Using _addon and _zip extensions with actions."},a="\ud83d\udcd0 Actions Scope",c={},l=[{value:"External scope",id:"external-scope",level:3},{value:"Addon Scope",id:"addon-scope",level:3},{value:"Zip Scope",id:"zip-scope",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"-actions-scope",children:"\ud83d\udcd0 Actions Scope"})}),"\n",(0,o.jsx)(n.p,{children:"Some DI actions support special extensions to change where they input files from."}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["When an action modifies files, only the ",(0,o.jsx)(n.code,{children:"input files"}),", which contain the information to make the changes, change their scope. The ",(0,o.jsx)(n.code,{children:"target files"}),", those that receive the modifications, maintain their normal external scope. This allows combining two different scopes in the same action, simplifying the work."]})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"external-scope",children:"External scope"}),"\n",(0,o.jsx)(n.p,{children:"By default, an external scope is used solely for actions needing input files or folders."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'import_bin "/sdcard/my_binary"   # From device storage\r\n\r\nupdate_file "/sdcard/example.txt" "/system/build.prop"  # Both from device storage\n'})}),"\n",(0,o.jsx)(n.h3,{id:"addon-scope",children:"Addon Scope"}),"\n",(0,o.jsxs)(n.p,{children:["Use input files from ",(0,o.jsx)(n.code,{children:"META-INF/addons"})," inside the ZIP."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'import_bin_addon "my_binary"   # From META-INF/addons/my_binary\r\n\r\n# Only the input file changes scope: META-INF/addons/myfile.txt\r\n# The target file maintains its external scope: /system/build.prop\r\nupdate_file_addon "myfile.txt" "/system/build.prop" \n'})}),"\n",(0,o.jsx)(n.h3,{id:"zip-scope",children:"Zip Scope"}),"\n",(0,o.jsx)(n.p,{children:"Use files directly from the ZIP, including folder paths."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'import_bin_zip "my_binary"   # From the installation ZIP root\r\n\r\n# Only the input file changes scope: folder/myfile.txt (internal path of the installation ZIP)\r\n# The target file maintains its external scope: /system/build.prop\r\nupdate_file_zip "folder/example.txt" "/system/build.prop"\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);